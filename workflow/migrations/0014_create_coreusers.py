# Generated by Django 2.0.7 on 2019-03-14 16:42
import uuid
from django.db import migrations, connection
from django.db.utils import ProgrammingError
from django.conf import settings
from workflow.models import Organization


def forwards(apps, schema_editor):
    org, _ = Organization.objects.get_or_create(name=settings.DEFAULT_ORG)

    sql = """
    SELECT u.id, u.username, u.first_name, u.last_name, u.email, u.is_staff, u.is_active, u.is_superuser, u.last_login, u.password, u.date_joined FROM auth_user as u
    LEFT JOIN workflow_coreuser ON u.id = workflow_coreuser.user_id
    WHERE workflow_coreuser.id IS NULL;
    """

    cursor_for_update = connection.cursor()

    try:
        with connection.cursor() as cursor:
            cursor.execute(sql)
            for row in cursor:
                data = (
                    row[0],  # id
                    uuid.uuid4(),
                    org.id,
                    row[1],  # username
                    row[2],  # first_name
                    row[3],  # last_name
                    row[4],  # email
                    row[5],  # is_staff
                    row[6],  # is_active
                    row[7],  # is_superuser
                    row[8],  # last_login
                    row[9],  # password
                    row[10],  # date_joined
                    row[10],
                    True
                )

                insert_sql = """
                INSERT INTO workflow_coreuser (user_id, core_user_uuid, organization_id, username, first_name, last_name, email, is_staff, is_active, is_superuser, last_login, password, date_joined, create_date, privacy_disclaimer_accepted) 
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
                """
                cursor_for_update.execute(insert_sql, data)
    except ProgrammingError:
        pass

    cursor_for_update.close()


def backwards(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('workflow', '0013_groups_to_roles'),
    ]

    operations = [
        migrations.RunPython(forwards, backwards)
    ]
